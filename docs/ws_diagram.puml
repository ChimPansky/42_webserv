@startuml
enum "Severity" as C_0012091752970610271488
enum C_0012091752970610271488 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/utils/logger.h#L10{Severity}]] {
DEBUG
INFO
WARNING
ERROR
FATAL
}
class "config::LocationConfig" as C_0008702948150066398639
class C_0008702948150066398639 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L14{LocationConfig}]] {
+LocationConfig(const std::pair<std::string,bool> & route, const std::vector<Method> & allowed_methods, const std::pair<int,std::string> & redirect, const std::vector<std::string> & cgi_paths, const std::vector<std::string> & cgi_extensions, const std::string & root_dir, const std::vector<std::string> & default_file, bool dir_listing, unsigned int client_max_body_size) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L24{LocationConfig}]]]
..
-InitRedirect(const std::pair<int,std::string> & value) : std::pair<int,std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L16{InitRedirect}]]]
+Print() const : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L74{Print}]]]
+allowed_methods() const : const std::vector<Method> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L33{allowed_methods}]]]
+cgi_extensions() const : const std::vector<std::string> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L37{cgi_extensions}]]]
+cgi_paths() const : const std::vector<std::string> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L36{cgi_paths}]]]
+client_max_body_size() const : unsigned int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L41{client_max_body_size}]]]
+default_file() const : const std::vector<std::string> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L39{default_file}]]]
+dir_listing() const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L40{dir_listing}]]]
+is_cgi() const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L35{is_cgi}]]]
{static} +kDefaultAllowedMethods() : std::vector<Method> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L53{kDefaultAllowedMethods}]]]
{static} +kDefaultCgiExtensions() : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L66{kDefaultCgiExtensions}]]]
{static} +kDefaultCgiPath() : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L60{kDefaultCgiPath}]]]
{static} +kDefaultClientMaxBodySize() : unsigned int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L45{kDefaultClientMaxBodySize}]]]
{static} +kDefaultDirListing() : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L52{kDefaultDirListing}]]]
{static} +kDefaultIndexFile() : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L46{kDefaultIndexFile}]]]
{static} +kDefaultRedirectCode() : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L42{kDefaultRedirectCode}]]]
{static} +kDefaultRedirectPath() : const char * [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L43{kDefaultRedirectPath}]]]
{static} +kDefaultRootDir() : const char * [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L44{kDefaultRootDir}]]]
+redirect() const : const std::pair<int,std::string> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L34{redirect}]]]
+root_dir() const : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L38{root_dir}]]]
+route() const : const std::pair<std::string,bool> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L32{route}]]]
__
-allowed_methods_ : std::vector<Method> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L78{allowed_methods_}]]]
-cgi_extensions_ : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L82{cgi_extensions_}]]]
-cgi_paths_ : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L81{cgi_paths_}]]]
-client_max_body_size_ : unsigned int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L86{client_max_body_size_}]]]
-default_file_ : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L84{default_file_}]]]
-dir_listing_ : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L85{dir_listing_}]]]
-is_cgi_ : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L80{is_cgi_}]]]
-redirect_ : std::pair<int,std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L79{redirect_}]]]
-root_dir_ : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L83{root_dir_}]]]
-route_ : std::pair<std::string,bool> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L77{route_}]]]
}
enum "config::LocationConfig::Method" as C_0007841399498684389823
enum C_0007841399498684389823 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/LocationConfig.h#L19{LocationConfig##Method}]] {
GET
POST
DELETE
}
class "config::ServerConfig" as C_0005644555742338964780
class C_0005644555742338964780 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L10{ServerConfig}]] {
+ServerConfig(const std::pair<std::string,Severity> & error_log, const std::string & error_log_path, const std::vector<std::pair<in_addr_t,in_port_t>> & listeners, const std::vector<std::string> & server_names, const std::vector<LocationConfig> & locations) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L19{ServerConfig}]]]
..
-InitAccessLog(const std::string & value) : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L12{InitAccessLog}]]]
-InitErrorLogPath(const std::string & value) : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L13{InitErrorLogPath}]]]
-InitListeners(const std::vector<std::pair<in_addr_t,in_port_t>> & value) : const std::vector<std::pair<in_addr_t,in_port_t>> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L15{InitListeners}]]]
-InitServerNames(const std::vector<std::string> & value) : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L14{InitServerNames}]]]
+Print() const : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L38{Print}]]]
+access_log_level() const : Severity [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L26{access_log_level}]]]
+access_log_path() const : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L25{access_log_path}]]]
+error_log_path() const : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L27{error_log_path}]]]
{static} +kDefaultAccessLogLevel() : Severity [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L32{kDefaultAccessLogLevel}]]]
{static} +kDefaultAccessLogPath() : const char * [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L33{kDefaultAccessLogPath}]]]
{static} +kDefaultErrorLogPath() : const char * [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L34{kDefaultErrorLogPath}]]]
{static} +kDefaultIPAddress() : in_addr_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L35{kDefaultIPAddress}]]]
{static} +kDefaultPort() : in_port_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L36{kDefaultPort}]]]
+listeners() const : const std::vector<std::pair<in_addr_t,in_port_t>> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L28{listeners}]]]
+locations() const : const std::vector<LocationConfig> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L30{locations}]]]
+server_names() const : const std::vector<std::string> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L29{server_names}]]]
__
-access_log_level_ : Severity [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L42{access_log_level_}]]]
-access_log_path_ : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L41{access_log_path_}]]]
-error_log_path_ : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L43{error_log_path_}]]]
-listeners_ : std::vector<std::pair<in_addr_t,in_port_t>> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L44{listeners_}]]]
-locations_ : std::vector<LocationConfig> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L46{locations_}]]]
-server_names_ : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ServerConfig.h#L45{server_names_}]]]
}
class "config::HttpConfig" as C_0014693717264446324081
class C_0014693717264446324081 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L10{HttpConfig}]] {
+HttpConfig(unsigned int keepalive_timeout, const std::map<int,std::string> & error_pages, const std::vector<ServerConfig> & server_configs) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L15{HttpConfig}]]]
..
-InitErrorPages(const std::map<int,std::string> & value) : const std::map<int,std::string> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L12{InitErrorPages}]]]
+Print() const : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L23{Print}]]]
+error_pages() const : const std::map<int,std::string> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L19{error_pages}]]]
{static} +kDefaultKeepaliveTimeout() : unsigned int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L22{kDefaultKeepaliveTimeout}]]]
+keepalive_timeout() const : unsigned int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L18{keepalive_timeout}]]]
+server_configs() const : const std::vector<ServerConfig> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L20{server_configs}]]]
__
-error_pages_ : std::map<int,std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L27{error_pages_}]]]
-keepalive_timeout_ : unsigned int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L26{keepalive_timeout_}]]]
-server_configs_ : std::vector<ServerConfig> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/HttpConfig.h#L28{server_configs_}]]]
}
class "config::Config" as C_0016911965729657983398
class C_0016911965729657983398 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L16{Config}]] {
+Config(config::Config::MxType mx_type, const std::pair<std::string,Severity> & error_log, const config::HttpConfig & http_config) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L23{Config}]]]
..
-InitErrorLogPath(const std::string & value) : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L20{InitErrorLogPath}]]]
+Print() const : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L35{Print}]]]
+error_log_level() const : Severity [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L28{error_log_level}]]]
+error_log_path() const : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L27{error_log_path}]]]
+http_config() const : const config::HttpConfig & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L29{http_config}]]]
{static} +kDefaultErrorLogLevel() : Severity [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L33{kDefaultErrorLogLevel}]]]
{static} +kDefaultErrorLogPath() : const char * [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L32{kDefaultErrorLogPath}]]]
{static} +kDefaultMxType() : config::Config::MxType [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L31{kDefaultMxType}]]]
+mx_type() const : config::Config::MxType [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L26{mx_type}]]]
__
-error_log_level_ : Severity [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L40{error_log_level_}]]]
-error_log_path_ : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L39{error_log_path_}]]]
-http_config_ : config::HttpConfig [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L41{http_config_}]]]
-mx_type_ : config::Config::MxType [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/Config.h#L38{mx_type_}]]]
}
class "config::InheritedSettings" as C_0004529636916597435325
class C_0004529636916597435325 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L9{InheritedSettings}]] {
+InheritedSettings() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L16{InheritedSettings}]]]
..
{static} +BuildClientMaxBodySize(const std::vector<std::string> & vals, const std::string & inherited_client_max_body_size) : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L27{BuildClientMaxBodySize}]]]
{static} +BuildDefaultFile(const std::vector<std::string> & vals, const std::vector<std::string> & inherited_def_file) : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L22{BuildDefaultFile}]]]
{static} +BuildDirListing(const std::vector<std::string> & vals, const std::string & inherited_dir_listing) : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L25{BuildDirListing}]]]
{static} +BuildRootDir(const std::vector<std::string> & vals, const std::string & inherited_root) : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L20{BuildRootDir}]]]
{static} +ParseClientMaxBodySize(const std::string & val, const std::string & unit) : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L29{ParseClientMaxBodySize}]]]
{static} +ParseDirListing(const std::string & vals) : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L24{ParseDirListing}]]]
__
+client_max_body_size : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L13{client_max_body_size}]]]
+def_file : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L11{def_file}]]]
+dir_listing : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L12{dir_listing}]]]
+root : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/InheritedSettings.h#L10{root}]]]
}
class "config::ParsedConfig" as C_0009073145739363605339
class C_0009073145739363605339 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L13{ParsedConfig}]] {
+ParsedConfig(std::ifstream & ifs, const std::string & nesting_lvl = "", const std::string & nesting_lvl_descrt = "") : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L15{ParsedConfig}]]]
..
+FindSetting(const std::string & key) const : std::vector<std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L24{FindSetting}]]]
+nested_configs() const : const std::vector<ParsedConfig> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L22{nested_configs}]]]
+nesting_lvl() const : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L19{nesting_lvl}]]]
+nesting_lvl_descr() const : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L20{nesting_lvl_descr}]]]
+settings() const : const std::multimap<std::string,std::string> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L21{settings}]]]
__
-nested_configs_ : std::vector<ParsedConfig> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L30{nested_configs_}]]]
-nesting_lvl_ : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L27{nesting_lvl_}]]]
-nesting_lvl_descr_ : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L28{nesting_lvl_descr_}]]]
-settings_ : std::multimap<std::string,std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ParsedConfig.h#L29{settings_}]]]
}
abstract "config::IConfigBuilder<ConfigType>" as C_0010306512589552494062
abstract C_0010306512589552494062 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/IConfigBuilder.h#L14{IConfigBuilder}]] {
{abstract} +Build(const config::ParsedConfig & f, const config::InheritedSettings & inherited_settings) const = 0 : ConfigType [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/IConfigBuilder.h#L20{Build}]]]
{abstract} #CheckAllNestings(const config::ParsedConfig & f) const = 0 : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/IConfigBuilder.h#L17{CheckAllNestings}]]]
{abstract} #IsKeyAllowed(const std::string & key) const = 0 : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/IConfigBuilder.h#L16{IsKeyAllowed}]]]
__
}
class "config::IConfigBuilder<config::Config>" as C_0006395157939026535474
class C_0006395157939026535474 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ConfigBuilder.h#L13{IConfigBuilder}]] {
__
}
class "config::ConfigBuilder" as C_0017834380528136696356
class C_0017834380528136696356 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ConfigBuilder.h#L13{ConfigBuilder}]] {
+Build(const config::ParsedConfig & f, const config::InheritedSettings & inherited_settings = InheritedSettings()) const : config::Config [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ConfigBuilder.h#L21{Build}]]]
-CheckAllNestings(const config::ParsedConfig & f) const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ConfigBuilder.h#L16{CheckAllNestings}]]]
{static} +GetConfigFromConfFile(const std::string & config_path) : const config::Config [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ConfigBuilder.h#L23{GetConfigFromConfFile}]]]
-IsKeyAllowed(const std::string & key) const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/config/ConfigBuilder.h#L15{IsKeyAllowed}]]]
__
}
enum "http::Method" as C_0009773579580823378477
enum C_0009773579580823378477 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/http.h#L9{Method}]] {
HTTP_NO_METHOD
HTTP_GET
HTTP_POST
HTTP_DELETE
}
enum "http::Version" as C_0010022302906997033527
enum C_0010022302906997033527 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/http.h#L15{Version}]] {
HTTP_NO_VERSION
HTTP_0_9
HTTP_1_0
HTTP_1_1
HTTP_2
HTTP_3
}
enum "http::RqStatus" as C_0016022781038471672454
enum C_0016022781038471672454 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L12{RqStatus}]] {
RQ_INCOMPLETE
RQ_BAD
RQ_GOOD
}
class "http::Request" as C_0002071445676245365158
class C_0002071445676245365158 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L19{Request}]] {
+Request() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L20{Request}]]]
..
+BodyPrint() const : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L32{BodyPrint}]]]
+GetHeaderVal(const std::string & key) const : std::pair<bool,std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L29{GetHeaderVal}]]]
+Print() const : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L31{Print}]]]
__
+body : std::vector<char> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L27{body}]]]
+headers : std::map<std::string,std::string> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L26{headers}]]]
+method : http::Method [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L23{method}]]]
+status : http::RqStatus [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L22{status}]]]
+uri : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L24{uri}]]]
+version : http::Version [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Request.h#L25{version}]]]
}
class "http::Response" as C_0001740473277793223816
class C_0001740473277793223816 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/Response.h#L6{Response}]] {
__
}
class "http::RequestParser" as C_0015730067808341921351
class C_0015730067808341921351 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L11{RequestParser}]] {
+RequestParser() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L13{RequestParser}]]]
..
+operator[](ssize_t index) : char & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L28{operator[]}]]]
..
+AdjustBufferSize(size_t bytes_recvd) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L17{AdjustBufferSize}]]]
+Advance(ssize_t n = 1) : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L21{Advance}]]]
+CompareBuf_(const char *, size_t len) const : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L20{CompareBuf_}]]]
+ElementLen() const : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L25{ElementLen}]]]
+EndOfBuffer() const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L23{EndOfBuffer}]]]
+ExceededLineLimit() const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L24{ExceededLineLimit}]]]
+ExtractElement(ssize_t end_offset = 0) const : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L26{ExtractElement}]]]
+Peek(ssize_t offset = 0) const : char [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L19{Peek}]]]
+PrepareToRecvData(size_t recv_size) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L16{PrepareToRecvData}]]]
+StartNewElement() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L22{StartNewElement}]]]
+buf() : std::vector<char> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L15{buf}]]]
+element_begin_idx() const : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L41{element_begin_idx}]]]
+element_end_idx() const : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L40{element_end_idx}]]]
+old_buf_size() const : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L39{old_buf_size}]]]
+set_old_buf_size(size_t sz) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L43{set_old_buf_size}]]]
__
-buf_ : std::vector<char> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L31{buf_}]]]
-element_begin_idx_ : ssize_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L34{element_begin_idx_}]]]
-element_end_idx_ : ssize_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L36{element_end_idx_}]]]
-line_begin_idx_ : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L33{line_begin_idx_}]]]
-old_buf_size_ : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestParser.h#L32{old_buf_size_}]]]
}
enum "http::RqBuilderStatus" as C_0012780864479698255684
enum C_0012780864479698255684 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L14{RqBuilderStatus}]] {
RB_BUILDING
RB_NEED_DATA_FROM_CLIENT
RB_NEED_INFO_FROM_SERVER
RB_DONE
}
class "http::RequestBuilder" as C_0010134359559864627488
class C_0010134359559864627488 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L21{RequestBuilder}]] {
+RequestBuilder() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L56{RequestBuilder}]]]
..
+AdjustBufferSize(size_t bytes_recvd) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L58{AdjustBufferSize}]]]
+ApplyServerInfo(size_t max_body_size) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L60{ApplyServerInfo}]]]
+Build(size_t bytes_recvd) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L59{Build}]]]
-BuildBodyChunkContent_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L84{BuildBodyChunkContent_}]]]
-BuildBodyChunkSize_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L83{BuildBodyChunkSize_}]]]
-BuildBodyRegular_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L82{BuildBodyRegular_}]]]
-BuildHeaderKey_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L77{BuildHeaderKey_}]]]
-BuildHeaderValue_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L79{BuildHeaderValue_}]]]
-BuildMethod_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L73{BuildMethod_}]]]
-BuildUri_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L74{BuildUri_}]]]
-BuildVersion_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L75{BuildVersion_}]]]
-CanBuild_() : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L87{CanBuild_}]]]
-CheckBodyRegularLength_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L81{CheckBodyRegularLength_}]]]
-CheckForBody_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L80{CheckForBody_}]]]
-CheckForEOL_() const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L89{CheckForEOL_}]]]
-CheckForNextHeader_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L76{CheckForNextHeader_}]]]
-IsParsingState_(http::RequestBuilder::BuildState state) const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L90{IsParsingState_}]]]
-NullTerminatorCheck_(char c) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L88{NullTerminatorCheck_}]]]
-ParseHeaderKeyValSep_() : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L78{ParseHeaderKeyValSep_}]]]
+PrepareToRecvData(size_t recv_size) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L57{PrepareToRecvData}]]]
+buf() : std::vector<char> & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L63{buf}]]]
+builder_status() const : http::RqBuilderStatus [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L61{builder_status}]]]
+rq() const : const http::Request & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L62{rq}]]]
__
-body_builder_ : http::RequestBuilder::BodyBuilder [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L71{body_builder_}]]]
-build_state_ : http::RequestBuilder::BuildState [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L69{build_state_}]]]
-builder_status_ : http::RqBuilderStatus [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L67{builder_status_}]]]
-header_key_ : std::string [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L70{header_key_}]]]
-parser_ : http::RequestParser [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L68{parser_}]]]
-rq_ : http::Request [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L66{rq_}]]]
}
class "http::RequestBuilder::BodyBuilder" as C_0014709066496024142206
class C_0014709066496024142206 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L23{RequestBuilder##BodyBuilder}]] {
+BodyBuilder(std::vector<char> * rq_body) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L24{BodyBuilder}]]]
__
+body : std::vector<char> * [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L26{body}]]]
+body_idx : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L28{body_idx}]]]
+chunked : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L27{chunked}]]]
+max_body_size : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L30{max_body_size}]]]
+remaining_length : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L29{remaining_length}]]]
}
enum "http::RequestBuilder::BuildState" as C_0014807252948559458580
enum C_0014807252948559458580 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L34{RequestBuilder##BuildState}]] {
BS_METHOD
BS_URI
BS_VERSION
BS_BETWEEN_HEADERS
BS_HEADER_KEY
BS_HEADER_KEY_VAL_SEP
BS_HEADER_VALUE
BS_CHECK_FOR_BODY
BS_CHECK_BODY_REGULAR_LENGTH
BS_BODY_REGULAR
BS_BODY_CHUNK_SIZE
BS_BODY_CHUNK_CONTENT
BS_END
BS_BAD_REQUEST
}
enum "http::RequestBuilder::EOL_CHARS" as C_0011727248674171417080
enum C_0011727248674171417080 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/http/RequestBuilder.h#L50{RequestBuilder##EOL_CHARS}]] {
EOL_CARRIAGE_RETURN
EOL_LINE_FEED
}
class "Server" as C_0007168929316485241399
class C_0007168929316485241399 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L14{Server}]] {
-Server() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L16{Server}]]]
-Server(const Server &) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L17{Server}]]]
+Server(const config::ServerConfig &) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L22{Server}]]]
..
-operator=(const Server &) : Server & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L18{operator=}]]]
..
+AcceptRequest(const http::Request & rq) : utils::unique_ptr<http::Response> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L30{AcceptRequest}]]]
+DoesMatchTheRequest(const http::Request & rq) const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L26{DoesMatchTheRequest}]]]
+name() const : const std::string & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L36{name}]]]
+server_config() const : const config::ServerConfig & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L38{server_config}]]]
__
-locations_ : std::vector<config::LocationConfig> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L41{locations_}]]]
-server_config_ : config::ServerConfig [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/server/Server.h#L42{server_config_}]]]
}
enum "c_api::CallbackType" as C_0010280665656743220987
enum C_0010280665656743220987 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/ICallback.h#L10{CallbackType}]] {
CT_READ
CT_WRITE
CT_READWRITE
}
abstract "c_api::ICallback" as C_0012303276662381294904
abstract C_0012303276662381294904 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/ICallback.h#L20{ICallback}]] {
+~ICallback() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/ICallback.h#L27{~ICallback}]]]
..
{abstract} +Call(int fd) = 0 : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/ICallback.h#L26{Call}]]]
__
}
enum "c_api::MultiplexType" as C_0016895992334824238936
enum C_0016895992334824238936 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/IMultiplexer.h#L8{MultiplexType}]] {
MT_SELECT
MT_POLL
MT_EPOLL
}
abstract "c_api::IMultiplexer" as C_0005542827944241153825
abstract C_0005542827944241153825 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/IMultiplexer.h#L14{IMultiplexer}]] {
+~IMultiplexer() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/IMultiplexer.h#L16{~IMultiplexer}]]]
..
{abstract} +CheckOnce(const c_api::FdToCallbackMap & rd_sockets, const c_api::FdToCallbackMap & wr_sockets) = 0 : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/IMultiplexer.h#L17{CheckOnce}]]]
{abstract} +RegisterFd(int fd, c_api::CallbackType type, const c_api::FdToCallbackMap & rd_sockets, const c_api::FdToCallbackMap & wr_sockets) = 0 : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/IMultiplexer.h#L18{RegisterFd}]]]
{abstract} +UnregisterFd(int fd, c_api::CallbackType type, const c_api::FdToCallbackMap & rd_sockets, const c_api::FdToCallbackMap & wr_sockets) = 0 : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/multiplexers/IMultiplexer.h#L20{UnregisterFd}]]]
__
}
class "c_api::ClientSocket" as C_0006183579169578681873
class C_0006183579169578681873 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L14{ClientSocket}]] {
-ClientSocket() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L16{ClientSocket}]]]
-ClientSocket(const c_api::ClientSocket &) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L17{ClientSocket}]]]
+ClientSocket(int sockfd, sockaddr_in addr_in) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L21{ClientSocket}]]]
+~ClientSocket() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L22{~ClientSocket}]]]
..
-operator=(const c_api::ClientSocket &) : c_api::ClientSocket & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L18{operator=}]]]
..
+Recv(std::vector<char> & buf, size_t sz) const : ssize_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L27{Recv}]]]
+Send(const std::vector<char> & buf, size_t & start_idx, size_t sz) const : ssize_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L28{Send}]]]
+addr_in() const : const sockaddr_in & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L24{addr_in}]]]
+buf_sz() const : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L29{buf_sz}]]]
+sockfd() const : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L23{sockfd}]]]
__
-addr_in_ : sockaddr_in [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L33{addr_in_}]]]
-sockfd_ : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/ClientSocket.h#L32{sockfd_}]]]
}
class "c_api::MasterSocket" as C_0000429903258282207458
class C_0000429903258282207458 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L14{MasterSocket}]] {
-MasterSocket() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L16{MasterSocket}]]]
-MasterSocket(const c_api::MasterSocket &) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L17{MasterSocket}]]]
+MasterSocket(in_addr_t ip, in_port_t port, bool set_nonblock = true) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L21{MasterSocket}]]]
+MasterSocket(const struct sockaddr_in & addr, bool set_nonblock = true) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L22{MasterSocket}]]]
+~MasterSocket() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L23{~MasterSocket}]]]
..
-operator=(const c_api::MasterSocket &) : c_api::MasterSocket & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L18{operator=}]]]
..
+Accept() const : utils::unique_ptr<ClientSocket> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L27{Accept}]]]
+IsSameSockAddr(struct sockaddr_in &) const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L28{IsSameSockAddr}]]]
+addr_in() const : const sockaddr_in & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L25{addr_in}]]]
{static} -socket(bool set_nonblock) : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L31{socket}]]]
+sockfd() const : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L24{sockfd}]]]
__
-addr_in_ : struct sockaddr_in [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L34{addr_in_}]]]
-sockfd_ : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/MasterSocket.h#L35{sockfd_}]]]
}
class "c_api::EventManager" as C_0014891154616151307795
class C_0014891154616151307795 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L14{EventManager}]] {
-EventManager() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L16{EventManager}]]]
-EventManager(const c_api::EventManager &) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L17{EventManager}]]]
-EventManager(c_api::MultiplexType mx_type_) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L19{EventManager}]]]
..
-operator=(const c_api::EventManager &) : c_api::EventManager & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L18{operator=}]]]
..
+CheckOnce() : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L25{CheckOnce}]]]
-ClearCallback_(int fd, c_api::CallbackType type) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L30{ClearCallback_}]]]
+DeleteCallback(int fd, c_api::CallbackType type) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L27{DeleteCallback}]]]
+RegisterCallback(int fd, c_api::CallbackType type, utils::unique_ptr<ICallback>) : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L26{RegisterCallback}]]]
{static} +get() : c_api::EventManager & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L23{get}]]]
{static} +init(c_api::MultiplexType mx_type_) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L22{init}]]]
__
-fds_to_delete_ : std::vector<std::pair<int,CallbackType>> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L35{fds_to_delete_}]]]
{static} -instance_ : utils::unique_ptr<EventManager> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L31{instance_}]]]
-multiplexer_ : utils::unique_ptr<IMultiplexer> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L32{multiplexer_}]]]
-rd_sockets_ : c_api::FdToCallbackMap [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L33{rd_sockets_}]]]
-wr_sockets_ : c_api::FdToCallbackMap [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/c_api/EventManager.h#L34{wr_sockets_}]]]
}
class "ClientSession" as C_0013630447627125416768
class C_0013630447627125416768 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L15{ClientSession}]] {
-ClientSession(const ClientSession &) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L17{ClientSession}]]]
-ClientSession() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L19{ClientSession}]]]
+ClientSession(utils::unique_ptr<c_api::ClientSocket> client_sock, int master_sock_fd) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L22{ClientSession}]]]
+~ClientSession() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L23{~ClientSession}]]]
..
-operator=(const ClientSession &) : ClientSession & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L18{operator=}]]]
..
+CloseConnection() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L27{CloseConnection}]]]
+IsRequestReady() const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L25{IsRequestReady}]]]
+PrepareResponse() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L28{PrepareResponse}]]]
+ProcessNewData(size_t bytes_recvd) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L26{ProcessNewData}]]]
+connection_closed() const : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L24{connection_closed}]]]
__
-buf_ : std::vector<char> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L49{buf_}]]]
-buf_send_idx_ : size_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L50{buf_send_idx_}]]]
-client_sock_ : utils::unique_ptr<c_api::ClientSocket> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L47{client_sock_}]]]
-connection_closed_ : bool [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L53{connection_closed_}]]]
-master_socket_fd_ : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L48{master_socket_fd_}]]]
-rq_ : http::Request [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L52{rq_}]]]
-rq_builder_ : http::RequestBuilder [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L51{rq_builder_}]]]
}
class "ClientSession::ClientReadCallback" as C_0003616429367591198319
class C_0003616429367591198319 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L29{ClientSession##ClientReadCallback}]] {
+Call(int) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L32{Call}]]]
+ClientReadCallback(ClientSession & client) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L31{ClientReadCallback}]]]
__
-client_ : ClientSession & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L35{client_}]]]
}
class "ClientSession::ClientWriteCallback" as C_0010125649719617549222
class C_0010125649719617549222 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L37{ClientSession##ClientWriteCallback}]] {
+Call(int) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L40{Call}]]]
+ClientWriteCallback(ClientSession & client) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L39{ClientWriteCallback}]]]
__
-client_ : ClientSession & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ClientSession.h#L43{client_}]]]
}
class "ServerCluster" as C_0018261038109130704555
class C_0018261038109130704555 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L20{ServerCluster}]] {
+ServerCluster(const config::Config & config) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L22{ServerCluster}]]]
..
-CheckClients_() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L58{CheckClients_}]]]
-CreateListener_(struct sockaddr_in addr) : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L56{CreateListener_}]]]
-CreateServers_(const config::Config & config) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L53{CreateServers_}]]]
-GetListenerFd_(struct sockaddr_in addr) : int [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L57{GetListenerFd_}]]]
-MapListenersToServer_(const std::vector<std::pair<in_addr_t,in_port_t>> & listeners, utils::shared_ptr<Server> & serv) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L54{MapListenersToServer_}]]]
+PrintDebugInfo() const : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L25{PrintDebugInfo}]]]
+Run() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L23{Run}]]]
{static} +StopHandler() : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L24{StopHandler}]]]
__
-clients_ : std::map<int,utils::unique_ptr<ClientSession>> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L50{clients_}]]]
{static} -run_ : volatile sig_atomic_t [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L60{run_}]]]
-servers_ : std::vector<utils::shared_ptr<Server>> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L44{servers_}]]]
-sockets_ : std::map<int,utils::unique_ptr<c_api::MasterSocket>> [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L40{sockets_}]]]
-sockets_to_servers_ : std::map<int,std::vector<utils::shared_ptr<Server>> > [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L47{sockets_to_servers_}]]]
}
class "ServerCluster::MasterSocketCallback" as C_0008783000988380148125
class C_0008783000988380148125 [[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L28{ServerCluster##MasterSocketCallback}]] {
+Call(int fd) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L32{Call}]]]
+MasterSocketCallback(ServerCluster & cluster) : void [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L30{MasterSocketCallback}]]]
__
-cluster_ : ServerCluster & [[[https://github.com/ChimPansky/42_webserv/blob/sockaddr-refact/src/ServerCluster.h#L35{cluster_}]]]
}
C_0008702948150066398639 ..> C_0007841399498684389823
C_0007841399498684389823 --+ C_0008702948150066398639
C_0005644555742338964780 o-- C_0012091752970610271488 : -access_log_level_
C_0005644555742338964780 o-- C_0008702948150066398639 : -locations_
C_0014693717264446324081 o-- C_0005644555742338964780 : -server_configs_
C_0016911965729657983398 o-- C_0016895992334824238936 : -mx_type_
C_0016911965729657983398 o-- C_0012091752970610271488 : -error_log_level_
C_0016911965729657983398 o-- C_0014693717264446324081 : -http_config_
C_0009073145739363605339 o-- C_0009073145739363605339 : -nested_configs_
C_0010306512589552494062 ..> C_0009073145739363605339
C_0010306512589552494062 ..> C_0004529636916597435325
C_0006395157939026535474 ..> C_0016911965729657983398
C_0006395157939026535474 ..|> C_0010306512589552494062
C_0017834380528136696356 ..> C_0009073145739363605339
C_0017834380528136696356 ..> C_0004529636916597435325
C_0017834380528136696356 ..> C_0016911965729657983398
C_0006395157939026535474 <|-- C_0017834380528136696356
C_0002071445676245365158 o-- C_0016022781038471672454 : +status
C_0002071445676245365158 o-- C_0009773579580823378477 : +method
C_0002071445676245365158 o-- C_0010022302906997033527 : +version
C_0010134359559864627488 o-- C_0002071445676245365158 : -rq_
C_0010134359559864627488 o-- C_0012780864479698255684 : -builder_status_
C_0010134359559864627488 o-- C_0015730067808341921351 : -parser_
C_0010134359559864627488 o-- C_0014807252948559458580 : -build_state_
C_0010134359559864627488 o-- C_0014709066496024142206 : -body_builder_
C_0014709066496024142206 --+ C_0010134359559864627488
C_0014807252948559458580 --+ C_0010134359559864627488
C_0011727248674171417080 --+ C_0010134359559864627488
C_0007168929316485241399 ..> C_0002071445676245365158
C_0007168929316485241399 ..> C_0001740473277793223816
C_0007168929316485241399 o-- C_0008702948150066398639 : -locations_
C_0007168929316485241399 o-- C_0005644555742338964780 : -server_config_
C_0005542827944241153825 ..> C_0012303276662381294904
C_0005542827944241153825 ..> C_0010280665656743220987
C_0000429903258282207458 ..> C_0006183579169578681873
C_0014891154616151307795 ..> C_0016895992334824238936
C_0014891154616151307795 o-- C_0005542827944241153825 : -multiplexer_
C_0014891154616151307795 o-- C_0012303276662381294904 : -rd_sockets_
C_0014891154616151307795 o-- C_0012303276662381294904 : -wr_sockets_
C_0014891154616151307795 o-- C_0010280665656743220987 : -fds_to_delete_
C_0014891154616151307795 --> C_0014891154616151307795 : -instance_
C_0013630447627125416768 o-- C_0006183579169578681873 : -client_sock_
C_0013630447627125416768 o-- C_0010134359559864627488 : -rq_builder_
C_0013630447627125416768 o-- C_0002071445676245365158 : -rq_
C_0003616429367591198319 --+ C_0013630447627125416768
C_0003616429367591198319 --> C_0013630447627125416768 : -client_
C_0012303276662381294904 <|-- C_0003616429367591198319
C_0010125649719617549222 --+ C_0013630447627125416768
C_0010125649719617549222 --> C_0013630447627125416768 : -client_
C_0012303276662381294904 <|-- C_0010125649719617549222
C_0018261038109130704555 ..> C_0016911965729657983398
C_0018261038109130704555 o-- C_0000429903258282207458 : -sockets_
C_0018261038109130704555 o-- C_0007168929316485241399 : -servers_
C_0018261038109130704555 o-- C_0007168929316485241399 : -sockets_to_servers_
C_0018261038109130704555 o-- C_0013630447627125416768 : -clients_
C_0008783000988380148125 --+ C_0018261038109130704555
C_0008783000988380148125 --> C_0018261038109130704555 : -cluster_
C_0012303276662381294904 <|-- C_0008783000988380148125

'Generated with clang-uml, version 0.5.3
'LLVM version Ubuntu clang version 15.0.7
@enduml
